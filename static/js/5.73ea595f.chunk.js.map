{"version":3,"sources":["hoc/WithAuthRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsForm.jsx","components/Dialogs/Dialogs.jsx","selectors/messagesSelectors.js","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","id","name","path","className","classes","dialog","UserOutlined","Message","message","maxMessageLength","maxLengthCreator","DialogsForm","onSubmit","handleSubmit","direction","formItem","Field","validate","requiredField","component","DialogsFormTextarea","type","htmlType","AddMessageReduxForm","reduxForm","form","Dialogs","dialogs","dialogItems","map","item","messages","newMessageBody","onSendMessageClick","getDialogs","dialogsPage","getMessage","compose","sendMessageCreator"],"mappings":"sMAIMA,EAAkB,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,SAgBRE,IAZU,SAACC,GAAc,IAC9BC,EAD8B,4JAEhC,WACI,OAAKC,KAAKC,MAAMN,OAGT,cAACG,EAAD,eAAeE,KAAKC,QAHI,cAAC,IAAD,CAAUC,GAAG,eAHhB,GACJC,IAAML,WAQtC,OAAOM,YAAQX,EAARW,CAAyBL,K,oBCjBpCM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,2B,6GCc7JC,MAVf,YAAiC,IAAZC,EAAW,EAAXA,GAAIC,EAAO,EAAPA,KACjBC,EAAO,YAAcF,EAEzB,OACI,sBAAKG,UAAWC,IAAQC,OAAxB,UACI,cAACC,EAAA,EAAD,IAAe,cAAC,IAAD,CAASZ,GAAIQ,EAAb,SAAmB,+BAAOD,UCDtCM,MANf,YAA6B,IAAXC,EAAU,EAAVA,QACd,OACI,qBAAKL,UAAWC,IAAQI,QAAxB,SAAkCA,K,6DCKpCC,EAAmBC,YAAiB,IAmB3BC,EAjBK,SAAClB,GACjB,OACI,sBAAMmB,SAAUnB,EAAMoB,aAAtB,SACI,eAAC,IAAD,CAAOC,UAAU,WAAjB,UACI,qBAAKX,UAAWC,IAAQW,SAAxB,SACI,cAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,IAAeT,GAAmBT,GAAG,iBAAiBC,KAAM,iBAAkBkB,UAAWC,QAE/G,qBAAKjB,UAAWC,IAAQW,SAAxB,SACI,cAAC,IAAD,CAAQM,KAAK,UAAUC,SAAS,SAAhC,4B,SCNdC,EAAsBC,YAAU,CAACC,KAAM,WAAjBD,CAA6Bb,GAqB1Ce,EAlBC,SAACjC,GAIb,OACI,sBAAKU,UAAWC,IAAQuB,QAAxB,UACI,qBAAKxB,UAAWC,IAAQwB,YAAxB,SACKnC,EAAMkC,QAAQE,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,eAA8BA,GAAbA,EAAK9B,SAErD,gCACI,8BAAMP,EAAMsC,SAASF,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,eAA2BA,GAAbA,EAAK9B,SACpD,cAACuB,EAAD,CAAqBX,SAThB,SAAC,GAAD,IAAEoB,EAAF,EAAEA,eAAF,OAAsBvC,EAAMwC,mBAAmBD,a,yBCnBvDE,EAAa,SAAChD,GACvB,OAAOA,EAAMiD,YAAYR,SAGhBS,EAAa,SAAClD,GACvB,OAAOA,EAAMiD,YAAYJ,UCWdM,sBACXzC,aAToB,SAACV,GAAD,MAAY,CAC5ByC,QAASO,EAAWhD,GACpB6C,SAAUK,EAAWlD,MASrB,CAAC+C,mBAAoBK,MAEzBjD,IALWgD,CAMbX","file":"static/js/5.73ea595f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nconst WithAuthRedirect = (Component) => {  //HOC body\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            //возвращаем контейнерную Компоненту для оборачивания целевой (презентационной) компоненты\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport default WithAuthRedirect;\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1kKcW\",\"dialogItems\":\"Dialogs_dialogItems__3kBUx\",\"active\":\"Dialogs_active__5CEoM\",\"dialog\":\"Dialogs_dialog__1QFZr\",\"message\":\"Dialogs_message__23ICW\"};","import React from 'react';\r\nimport classes from \"../Dialogs.module.css\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction DialogItem({id, name}) {\r\n    let path = \"/dialogs/\" + id;\r\n\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <UserOutlined/><NavLink to={path}><span>{name}</span></NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from \"../Dialogs.module.css\";\r\n\r\nfunction Message({message}) {\r\n    return (\r\n        <div className={classes.message}>{message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Button, Space} from \"antd\";\r\nimport classes from \"../Login/Login.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport {\r\n    DialogsFormTextarea\r\n} from \"../utils/inputs/ReduxFormInputs\";\r\nimport {maxLengthCreator, requiredField} from \"../utils/validators/validators\";\r\n\r\n\r\nconst maxMessageLength = maxLengthCreator(30);\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Space direction='vertical'>\r\n                <div className={classes.formItem}>\r\n                    <Field validate={[requiredField, maxMessageLength]} id=\"newMessageBody\" name={\"newMessageBody\"} component={DialogsFormTextarea} />\r\n                </div>\r\n                <div className={classes.formItem}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </Space>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default DialogsForm;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogsForm from \"./DialogsForm\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\n///////////////COMMENTS//////////////////////////////\r\n// Презентационная компонента - pure function.\r\n// No interaction with Redux store.\r\n// Renders markup HTML (разметку) only.\r\n// Receives data via props from Container Component.\r\n////////////////////////////////////////////////////\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'message'})(DialogsForm);\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const onSubmit = ({newMessageBody}) => props.onSendMessageClick(newMessageBody);\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogItems}>\r\n                {props.dialogs.map(item => <DialogItem key={item.id} {...item} />)}\r\n            </div>\r\n            <div>\r\n                <div>{props.messages.map(item => <Message key={item.id} {...item} />)}</div>\r\n                <AddMessageReduxForm onSubmit={onSubmit} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dialogs;","export const getDialogs = (state) => {\r\n    return state.dialogsPage.dialogs;\r\n}\r\n\r\nexport const getMessage = (state) => {\r\n    return state.dialogsPage.messages;\r\n}\r\n\r\n","import {sendMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport WithAuthRedirect from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogs, getMessage} from \"../../selectors/messagesSelectors\";\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n        dialogs: getDialogs(state),\r\n        messages: getMessage(state)\r\n    });\r\n\r\n\r\n\r\n//Which Order?: connect() ------> AuthRedirect() HOC ----->  <DialogsContainer /> -----> <Dialogs />\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        {onSendMessageClick: sendMessageCreator}\r\n    ),\r\n    WithAuthRedirect //оборачиваем ХОКом DialogsContainer, которая в свою очередь оборачивает Dialogs целевую компоненту для атентификационного перенаправления\r\n)(Dialogs)\r\n"],"sourceRoot":""}